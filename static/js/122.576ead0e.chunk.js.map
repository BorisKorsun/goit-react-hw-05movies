{"version":3,"file":"static/js/122.576ead0e.chunk.js","mappings":"oOAIMA,EAAU,IAAIC,EAAAA,EAEL,SAASC,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QASR,OAPAE,EAAAA,EAAAA,YAAU,WACRV,EACGW,eAAeH,GACfI,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcR,EAAWQ,EAAKC,QAA9B,IACLC,MAAMR,EACV,GAAE,CAACC,IAEAF,GACK,uBAAIA,KAIX,0BACsB,IAAnBF,EAAQY,SACP,qEAEDZ,EAAQa,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASC,EAAS,EAATA,GAC/B,OACE,2BACE,qCAAaF,MACb,uBAAIC,MAFGC,EAKZ,MAGN,C,qDChCKnB,EAAAA,WACJ,cAAe,eACboB,KAAKrB,QAAUsB,EAAAA,EAAAA,OAAa,CAC1BC,QANW,gCAOXC,OAAQ,CAAEC,QANA,mCAMkBC,MAAO,KAEtC,CAqBA,OArBA,yCAED,WACE,OAAOL,KAAKrB,QAAQ2B,IAAI,qBACzB,6BAED,SAAaP,GACX,OAAOC,KAAKrB,QAAQ2B,IAAb,gBAA0BP,GAClC,8BAED,SAAcA,GACZ,OAAOC,KAAKrB,QAAQ2B,IAAb,gBAA0BP,EAA1B,YACR,+BAED,SAAeA,GACb,OAAOC,KAAKrB,QAAQ2B,IAAb,gBAA0BP,EAA1B,YACR,iCAED,SAAiBM,GAEf,OADAL,KAAKrB,QAAQ4B,SAASJ,OAAOE,MAAQA,EAC9BL,KAAKrB,QAAQ2B,IAAI,eACzB,OA3BG1B,GA8BN,K","sources":["components/Reviews/Reviews.jsx","service/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport API from 'service/api';\n\nconst service = new API();\n\nexport default function Reviews() {\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    service\n      .getReviewsById(movieId)\n      .then(({ data }) => setReviews(data.results))\n      .catch(setError);\n  }, [movieId]);\n\n  if (error) {\n    return <p>{error}</p>;\n  }\n\n  return (\n    <ul>\n      {reviews.length === 0 && (\n        <li>We don't have any reviews for this movie</li>\n      )}\n      {reviews.map(({ author, content, id }) => {\n        return (\n          <li key={id}>\n            <h4>Author: {author}</h4>\n            <p>{content}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '79fb62b7e77dc5ee41dd0c1332d74198';\n\nclass API {\n  constructor() {\n    this.service = axios.create({\n      baseURL: BASE_URL,\n      params: { api_key: API_KEY, query: '' },\n    });\n  }\n\n  getTrendingMovies() {\n    return this.service.get('trending/movie/day');\n  }\n\n  getMovieById(id) {\n    return this.service.get(`movie/${id}`);\n  }\n\n  getActorsById(id) {\n    return this.service.get(`movie/${id}/credits`);\n  }\n\n  getReviewsById(id) {\n    return this.service.get(`movie/${id}/reviews`);\n  }\n\n  getMoviesByTitle(query) {\n    this.service.defaults.params.query = query;\n    return this.service.get('search/movie')\n  }\n}\n\nexport default API;\n"],"names":["service","API","Reviews","useState","reviews","setReviews","error","setError","movieId","useParams","useEffect","getReviewsById","then","data","results","catch","length","map","author","content","id","this","axios","baseURL","params","api_key","query","get","defaults"],"sourceRoot":""}