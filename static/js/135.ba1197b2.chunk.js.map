{"version":3,"file":"static/js/135.ba1197b2.chunk.js","mappings":"4OAIMA,EAAU,IAAIC,EAAAA,EAEL,SAASC,IAAuB,IAAD,EAC5C,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,IAAgB,CAAEC,KAAM,KAAhE,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAS,UAAGF,EAAaG,IAAI,eAApB,QAA+B,GAExCC,GAAWC,EAAAA,EAAAA,OASjBC,EAAAA,EAAAA,YAAU,WACRhB,EACGiB,iBAAiBL,GACjBM,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcd,EAAUc,EAAKC,QAA7B,IACLC,MAAMd,EACV,GAAE,CAACK,IAaJ,OAAIN,GACK,uBAAIA,KAIX,iCACE,kBAAMgB,SAZO,SAAAC,GACfA,EAAEC,iBACFC,QAAQC,IAAI,UACZf,EAAgB,CAAC,EAClB,EAQG,WACE,kBAAOgB,SAlBI,SAAAJ,IAdU,SAAAd,GACzB,GAAa,KAATA,EACF,OAAOE,EAAgB,CAAC,GAE1BA,EAAgB,CAAEF,KAAAA,GACnB,CAWCmB,CADaL,EAAEM,OAAOC,MAEvB,EAegCA,MAAOlB,KAClC,mBAAQmB,KAAK,SAAb,wBAEF,wBACG3B,EAAO4B,KAAI,YAA6B,IAA1BC,EAAyB,EAAzBA,GAAIC,EAAqB,EAArBA,eACjB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKF,GAAMG,MAAO,CAAEC,KAAMvB,GAAlC,SACGoB,KAFID,EAMZ,QAIR,CC5Dc,SAASK,IACpB,OAAO,SAACpC,EAAD,GACV,C,qDCCKD,EAAAA,WACJ,cAAe,eACbsC,KAAKvC,QAAUwC,EAAAA,EAAAA,OAAa,CAC1BC,QANW,gCAOXC,OAAQ,CAAEC,QANA,mCAMkBC,MAAO,KAEtC,CAqBA,OArBA,yCAED,WACE,OAAOL,KAAKvC,QAAQa,IAAI,qBACzB,6BAED,SAAaoB,GACX,OAAOM,KAAKvC,QAAQa,IAAb,gBAA0BoB,GAClC,8BAED,SAAcA,GACZ,OAAOM,KAAKvC,QAAQa,IAAb,gBAA0BoB,EAA1B,YACR,+BAED,SAAeA,GACb,OAAOM,KAAKvC,QAAQa,IAAb,gBAA0BoB,EAA1B,YACR,iCAED,SAAiBW,GAEf,OADAL,KAAKvC,QAAQ6C,SAASH,OAAOE,MAAQA,EAC9BL,KAAKvC,QAAQa,IAAI,eACzB,OA3BGZ,GA8BN,K","sources":["components/SearchFormMovieList/SearchFormMovieList.jsx","pages/Movies/Movies.jsx","service/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport API from 'service/api';\n\nconst service = new API();\n\nexport default function SearchFormMovieList() {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams({ name: '' });\n  const movieName = searchParams.get('name') ?? '';\n\n  const location = useLocation();\n\n  const updateSearchParams = name => {\n    if (name === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ name });\n  };\n\n  useEffect(() => {\n    service\n      .getMoviesByTitle(movieName)\n      .then(({ data }) => setMovies(data.results))\n      .catch(setError);\n  }, [movieName]);\n\n  const onChange = e => {\n    const name = e.target.value;\n    updateSearchParams(name);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    console.log('submit');\n    setSearchParams({});\n  };\n\n  if (error) {\n    return <p>{error}</p>;\n  }\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input onChange={onChange} value={movieName} />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {movies.map(({ id, original_title }) => {\n          return (\n            <li key={id}>\n              <Link to={`${id}`} state={{ from: location }}>\n                {original_title}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n}\n","import SearchFormMovieList from 'components/SearchFormMovieList'\n\nexport default function Movies() {\n    return <SearchFormMovieList/>\n}","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '79fb62b7e77dc5ee41dd0c1332d74198';\n\nclass API {\n  constructor() {\n    this.service = axios.create({\n      baseURL: BASE_URL,\n      params: { api_key: API_KEY, query: '' },\n    });\n  }\n\n  getTrendingMovies() {\n    return this.service.get('trending/movie/day');\n  }\n\n  getMovieById(id) {\n    return this.service.get(`movie/${id}`);\n  }\n\n  getActorsById(id) {\n    return this.service.get(`movie/${id}/credits`);\n  }\n\n  getReviewsById(id) {\n    return this.service.get(`movie/${id}/reviews`);\n  }\n\n  getMoviesByTitle(query) {\n    this.service.defaults.params.query = query;\n    return this.service.get('search/movie')\n  }\n}\n\nexport default API;\n"],"names":["service","API","SearchFormMovieList","useState","movies","setMovies","error","setError","useSearchParams","name","searchParams","setSearchParams","movieName","get","location","useLocation","useEffect","getMoviesByTitle","then","data","results","catch","onSubmit","e","preventDefault","console","log","onChange","updateSearchParams","target","value","type","map","id","original_title","to","state","from","Movies","this","axios","baseURL","params","api_key","query","defaults"],"sourceRoot":""}