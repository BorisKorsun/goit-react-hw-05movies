{"version":3,"file":"static/js/173.55f061d6.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","pages/MovieDetails/MovieDetails.jsx","service/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CardContainer = styled.section`\n  display: flex;\n  padding-bottom: 15px;\n  margin-bottom: 15px;\n  box-shadow: 0 1px 0 0 rgba(0, 0, 0, 0.15);\n`;\n\nexport const Title = styled.h3`\n  margin-top: 15px;\n  margin-bottom: 15px;\n`;\n\nexport const Score = styled.p`\n  margin-bottom: 15px;\n`;\n\nexport const SubTitle = styled.h4`\n  font-weight: 500;\n  margin-bottom: 15px;\n`;\n\nexport const Desctiption = styled.p`\n  margin-bottom: 15px;\n`;\n\nexport const PosterContainer = styled.div`\n  width: 360px;\n  margin-right: 20px;\n`;\n\nexport const InfoContainer = styled.div``;\n\nexport const GenresList = styled.ul`\n  display: flex;\n  list-style: none;\n  padding: 0;\n\n  & > li {\n    padding-right: 6px;\n  }\n`;\n","import { useEffect, useState, useRef } from 'react';\nimport { useParams, useLocation, Link } from 'react-router-dom';\n\nimport defaultImage from 'components/default-image.jpg';\nimport API from 'service/api';\nimport {\n  CardContainer,\n  Title,\n  Score,\n  SubTitle,\n  Desctiption,\n  PosterContainer,\n  InfoContainer,\n  GenresList,\n} from './MovieCard.styled';\n\nconst service = new API();\n\nexport default function MovieCard() {\n  const [title, setTitle] = useState('');\n  const [year, setYear] = useState('');\n  const [score, setScore] = useState(null);\n  const [overview, setOverview] = useState('');\n  const [genres, setGenres] = useState([]);\n  const [imageUrl, setImageUrl] = useState('');\n  const [error, setError] = useState(null);\n  \n  const location = useRef(useLocation());\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    service\n      .getMovieById(movieId)\n      .then(({ data }) => {\n        setTitle(data.original_title ?? data.name);\n        setYear(data.release_date);\n        setScore(data.vote_average);\n        setOverview(data.overview);\n        setGenres(data.genres);\n        if (data.poster_path) {\n          setImageUrl(`https://image.tmdb.org/t/p/original${data.poster_path}`);\n        }\n      })\n      .catch(setError);\n  }, [movieId]);\n\n  if (error) {\n    return <p>{error}</p>;\n  }\n\n  return (\n    <>\n      <button type=\"button\">\n        <Link to={location.current.state?.from ?? '/'}>Go back</Link>\n      </button>\n      <CardContainer>\n        <PosterContainer>\n          <img\n            width=\"100%\"\n            alt={title}\n            src={imageUrl ? imageUrl : defaultImage}\n          />\n        </PosterContainer>\n        <InfoContainer>\n          <Title>\n            {year ? `${title}: (${year.slice(0, 4)})` : `${title}`}{' '}\n          </Title>\n          <Score>User score: {Math.round(score * 10)}%</Score>\n          <SubTitle>Overview</SubTitle>\n          <Desctiption>{overview}</Desctiption>\n          <SubTitle>Genres</SubTitle>\n          <GenresList>\n            {genres.map(({ name, id }) => {\n              return <li key={id}>{name}</li>;\n            })}\n          </GenresList>\n        </InfoContainer>\n      </CardContainer>\n    </>\n  );\n}\n","import { Link, Outlet } from 'react-router-dom';\nimport { Suspense } from 'react';\n\nimport MovieCard from 'components/MovieCard';\nimport SuspenseFallback from 'components/SuspenseFallback';\n\nexport default function MovieDetails() {\n  return (\n    <section>\n      <MovieCard />\n\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Suspense fallback={<SuspenseFallback>Loading..</SuspenseFallback>}>\n        <Outlet />\n      </Suspense>\n    </section>\n  );\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '79fb62b7e77dc5ee41dd0c1332d74198';\n\nclass API {\n  constructor() {\n    this.service = axios.create({\n      baseURL: BASE_URL,\n      params: { api_key: API_KEY, query: '' },\n    });\n  }\n\n  getTrendingMovies() {\n    return this.service.get('trending/movie/day');\n  }\n\n  getMovieById(id) {\n    return this.service.get(`movie/${id}`);\n  }\n\n  getActorsById(id) {\n    return this.service.get(`movie/${id}/credits`);\n  }\n\n  getReviewsById(id) {\n    return this.service.get(`movie/${id}/reviews`);\n  }\n\n  getMoviesByTitle(query) {\n    this.service.defaults.params.query = query;\n    return this.service.get('search/movie')\n  }\n}\n\nexport default API;\n"],"names":["CardContainer","styled","Title","Score","SubTitle","Desctiption","PosterContainer","InfoContainer","GenresList","service","API","MovieCard","useState","title","setTitle","year","setYear","score","setScore","overview","setOverview","genres","setGenres","imageUrl","setImageUrl","error","setError","location","useRef","useLocation","movieId","useParams","useEffect","getMovieById","then","data","original_title","name","release_date","vote_average","poster_path","catch","type","to","current","state","from","width","alt","src","defaultImage","slice","Math","round","map","id","MovieDetails","Suspense","fallback","SuspenseFallback","this","axios","baseURL","params","api_key","query","get","defaults"],"sourceRoot":""}